//01_helloworld.cpp

/* 
 주석
  : 프로그래머가 코드에 메모를 하는 것, 컴파일 할때 전처리 단계에서 주석은 삭제된다.
 */

// 한줄주석 
// 안녕하세용

/* 여러줄 주석
오늘저녁뭐먹지
ㅑㅑ캬ㅑㅑ캬캬 */

/*
 사람 ---> 컴퓨터 : 불가능
 사람 ---> 통역가 ---> 컴퓨터
         (Compiler)
  -컴퓨터는 프로그래머가 작성한 코드를 이해할 수 없기 떄문에 기계어로 변환해주어야함.

  기계어 
  : 컴퓨터가 읽을 수 있는 2진 숫자(0과 1)로 작성된 언어 , 0101011011

  프로그램을 작성하고 실행하는 단계
  : 코드작성 --> 컴파일 --> 링크 --> 로드

*/
#include <stdio.h>
/* 
 #
 : pre-process 전 처리, 컴파일을 수행하기 전에 먼저 처리하는 기호

 include (포함하다)
 : 컴파일 전에 ~를 포함하고 실행하라는 뜻

 stdio.h : 표준 입출력 함수를 가지는 헤더파일
 - std : standard(표준)
 - io : input / output (입력 / 출력)
 - .h : 헤더파일 확장자이름

 헤더파일 
 : 함수의 헤더 부분만 가지고 있는 파일

 
*/

/*
  함수(function)
   : 하나의 목적의 작업을 수행하도록 설계된 프로그램 코드의 집합
   
   main 함수 : 프로그램의 시작점 
    - main이 종료되면 프로그램이 종료된다. 운영체제에 의해 맨처음 호출되고 맨나중에 종료된다.

	반환값 함수이름 (받는값) <= 함수의 헤더
	{ <= 함수의 시작

	함수의 기능

	} <=함수의 끝

	받는값 : 함수가 호출될 떄 받는값
	  {}   : 함수의 시작과 끝을 나타내는 몸체부분으로 함수가 실행할 동작을 작성한다.
	반환값 : 함수가 종료될깨 반환하는 값

	int main (void)
	{
	}
	: main함수를 호출할 때 void(아무것도 받지않음)값을 받으며 함수가 종료될떄 int(정수형) 값을 반환한다.
*/

// main 함수

int main(void)
{
	printf("hello world!!!!\n");
	// 문자열
	// "내용" : " "안에 있는 내용을 문장으로 표현할 떄 사용한다.
	printf("hello world!!\n\n\n\n\n");
	// f : formatted(서식화된) 다양한 서식에 맞춰 출력해준다.
	/*
	Escape Sequence
	: \ 뒤에 한 문자나 숫자 조합으로 줄바꿈, 특정 문자를 표현할떄 사용 ex) \n, \t, \" ...
	*/
	printf("\thello world\n");
	printf("10\n");
	printf("%d\n", 10);
	printf("플레이어의 체력 : %d\n", 10);
	printf("%d %d %d %d %d\n", 10, 20, 30, 40, 50); //동시사용 가능
	printf("%f\n", 0.5);

	int a = 10;
	a += 10;
	printf("%d\n", a);

	/*
	%d 같은 것
	format specifier  vs  conversion specifier => 둘다 같은말
	 서식    지정자           변환      지정자
	*/

	return 0; // 0을 반환하고 main 함수를 종료한다.
	//return은 반환과 종료의 의미를 가짐
}